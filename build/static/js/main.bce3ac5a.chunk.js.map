{"version":3,"sources":["Map.js","App.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainerRef","useRef","lng","setLng","Popup","offset","useState","lat","setLat","zoom","setZoom","useEffect","map","container","current","style","center","logoPosition","addControl","Geocoder","NavigationControl","on","getCenter","toFixed","getZoom","remove","className","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSASAA,IAASC,YACP,iGAkFaC,MAhFH,KACV,MAAMC,EAAkBC,iBAAO,OAIxBC,EAAKC,IAHOF,iBAAO,IAAIJ,IAASO,MAAM,CAAEC,OAAQ,MAGjCC,mBAAS,QACxBC,EAAKC,GAAUF,mBAAS,OACxBG,EAAMC,GAAWJ,mBAAS,KA6DjC,OA1DAK,qBAAU,KACR,MAAMC,EAAM,IAAIf,IAASE,IAAI,CAC3Bc,UAAWb,EAAgBc,QAC3BC,MAAO,qCAEPC,OAAQ,CAACd,EAAKK,GACdE,KAAMA,EACNQ,aAAc,gBAgDhB,OA7CAL,EAAIM,WACF,IAAIC,IAAS,CACbrB,YAAaD,IAASC,YACtBD,SAAUA,MACP,aAGLe,EAAIM,WAAW,IAAIrB,IAASuB,kBAAqB,aAEjDR,EAAIS,GAAG,QAAQ,KACblB,EAAOS,EAAIU,YAAYpB,IAAIqB,QAAQ,IACnCf,EAAOI,EAAIU,YAAYf,IAAIgB,QAAQ,IACnCb,EAAQE,EAAIY,UAAUD,QAAQ,OAiCzB,IAAMX,EAAIa,WAChB,IAGD,gCACE,qBAAKC,UAAU,eAAf,SACE,8CACcxB,EADd,gBACgCK,EADhC,YAC8CE,OAGhD,qBAAKiB,UAAU,gBAAgBC,IAAK3B,QC5E3B4B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bce3ac5a.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport Geocoder from 'mapbox-gl-geocoder'\r\nimport './Map.css';\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\n//import 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport Tooltip from './components/Tooltip';\r\nimport ReactDOM from 'react-dom';\r\n\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1IjoiYW5uYWdvbGQwMDciLCJhIjoiY2t2bTNsajF2MWNiMDJ1dGtxM2lwOTZybSJ9.BvkgIPX-S7LrBwyqDMgiZw';\r\n\r\nconst Map = () => {\r\n  const mapContainerRef = useRef(null);\r\n  const tooltipRef = useRef(new mapboxgl.Popup({ offset: 15 }));\r\n\r\n\r\n  const [lng, setLng] = useState(36.300);\r\n  const [lat, setLat] = useState(31.400);\r\n  const [zoom, setZoom] = useState(6.6);\r\n\r\n  // Initialize map when component mounts\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n    //  style: 'mapbox://styles/annagold007/ckvm8uwn90pnp15mgbl2bstt0',\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n      logoPosition: 'bottom-left'\r\n    });\r\n\r\n    map.addControl(\r\n      new Geocoder({\r\n      accessToken: mapboxgl.accessToken,\r\n      mapboxgl: mapboxgl\r\n      }),'top-right'\r\n      );\r\n\r\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n\r\n    map.on('move', () => {\r\n      setLng(map.getCenter().lng.toFixed(4));\r\n      setLat(map.getCenter().lat.toFixed(4));\r\n      setZoom(map.getZoom().toFixed(2));\r\n    });\r\n//  // change cursor to pointer when user hovers over a clickable feature\r\n//     map.on('mouseenter', e => {\r\n//       if (e.features.length) {\r\n//         map.getCanvas().style.cursor = 'pointer';\r\n//       }\r\n//     });\r\n\r\n//     // reset cursor to default when user is no longer hovering over a clickable feature\r\n//     map.on('mouseleave', () => {\r\n//       map.getCanvas().style.cursor = '';\r\n//     });\r\n\r\n//     // add tooltip when users mouse move over a point\r\n//     map.on('mousemove', e => {\r\n//       const features = map.queryRenderedFeatures(e.point);\r\n//       if (features.length) {\r\n//         const feature = features[0];\r\n\r\n//         // Create tooltip node\r\n//         const tooltipNode = document.createElement('div');\r\n//         ReactDOM.render(<Tooltip feature={feature} />, tooltipNode);\r\n\r\n//         // Set tooltip on map\r\n//         tooltipRef.current\r\n//           .setLngLat(e.lngLat)\r\n//           .setDOMContent(tooltipNode)\r\n//           .addTo(map);\r\n//       }\r\n//     });\r\n  \r\n    // Clean up on unmount\r\n    return () => map.remove();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div>\r\n      <div className='sidebarStyle'>\r\n        <div>\r\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n        </div>\r\n      </div>\r\n      <div className='map-container' ref={mapContainerRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;","import React from 'react';\r\nimport Map from './Map';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Map />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}